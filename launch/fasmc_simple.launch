<?xml version="1.0" ?>
<!-- [25-10-24] Constructed for simulating a 3 DoF SMM, with 3 joint effort controllers && fasmc centralized node -->
<!--           - fasmc_master node executes the "update" function and publishes the joint torques 
               - the controller yaml is located in the ros_pkg of the robot xacro file: smm_ros_gazebo_pkg
-->
     
<launch>
    <!-- Include launch file Gazebo with robot and all controller settings -->
     <include file="$(find smm_control)/launch/idosc_gazebo_settings.launch"/> <!--use same settings for fasmc and idosc -->
    
    <!-- FASMC SIMPLE IMPLEMENTATION -->
    
    <!-- Node that generates the topic /joint_current_state -->
    <node name="updateJointState_fasmc_simple" pkg="smm_control" type="updateJointState_fasmc_simple" output="screen" />

        <!-- Analytical Dynamics using screws @ /joint_current_state -->
        <node name="serverRobotDynamics" pkg="smm_control" type="serverRobotDynamics" output="screen" />

    <!-- Node that publishes to /joint_desired_state -->
    <rosparam file="$(find smm_control)/config/yaml/paths/cspace_path_reid16.yaml" command="load"/> <!-- "cspace_ prefix used to define joint commands. naming also changes" -->
    <node name="publishJointPathLoop_fasmc_simple" pkg="smm_control" type="publishJointPathLoop_fasmc_simple" output="screen" />

    <!-- Node that publishes to /fasmc_error_state -->
    <node name="updateErrorState_fasmc_simple" pkg="smm_control" type="updateErrorState_fasmc_simple" output="screen" />

    <!-- FASMC -->

    <!-- Sliding state -->
    <rosparam file="$(find smm_control)/config/yaml/fasmc/fixed_params.yaml" command="load"/>
    <node name="updateSlidingState_fasmc_simple" pkg="smm_control" type="updateSlidingState_fasmc_simple" output="screen" /> 

    <!-- Fuzzy Parameters -->
    <node name="updateFuzzyParams_fasmc_simple" pkg="smm_control" type="updateFuzzyParams_fasmc_simple" output="screen" />

    <!-- Adaptive Parameters -->
    <node name="updateParams_fasmc_simple" pkg="smm_control" type="updateParams_fasmc_simple" output="screen" />  

    <!-- Robust torque term -->
    <node name="updateRobustTorque_fasmc_simple" pkg="smm_control" type="updateRobustTorque_fasmc_simple" output="screen" />

    <!-- Dynamic Model torque term -->  
    <node name="updateDynamicsTorque_fasmc_simple" pkg="smm_control" type="updateDynamicsTorque_fasmc_simple" output="screen" />

    <!-- Add fasmc torques-->
    <node name="updateTorqueCommand_fasmc_simple" pkg="smm_control" type="updateTorqueCommand_fasmc_simple" output="screen" />

    <!-- Publish to robot effort controllers -->
    <node name="robot_torque_command_publisher" pkg="smm_control" type="robot_torque_command_publisher" output="screen" />

    <!-- Include launch file for data logging and real time monitoring -->
    <include file="$(find smm_control)/launch/fasmc_data_monitor.launch"/>
</launch>